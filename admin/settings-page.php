<?php

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class GalleryScrapperSettings
{
    private $gallery_scrapper_settings_options;

    public function __construct()
    {
        add_action('admin_menu', array($this, 'gallery_scrapper_settings_add_plugin_page'));
        add_action('admin_init', array($this, 'gallery_scrapper_settings_page_init'));


//        require_once plugin_dir_path( dirname( __FILE__ ) ) . 'includes/Importer.php';
//
//        $a = Importer::sync();

    }

    public function gallery_scrapper_settings_add_plugin_page()
    {
        add_menu_page(
            'Gallery Scrapper', // page_title
            'Gallery Scrapper', // menu_title
            'manage_options', // capability
            'gallery-scrapper-settings', // menu_slug
            array($this, 'gallery_scrapper_settings_create_admin_page'), // function
            'dashicons-format-gallery', // icon_url
            65 // position
        );
    }

    public function gallery_scrapper_settings_create_admin_page()
    {
        $this->gallery_scrapper_settings_options = get_option('gallery_scrapper_settings_option_name'); ?>

        <div class="wrap">
            <h2>Gallery Scrapper</h2>
            <p></p>
            <?php settings_errors(); ?>

            <form method="post" action="options.php">
                <?php
                settings_fields('gallery_scrapper_settings_option_group');
                do_settings_sections('gallery-scrapper-settings-admin');
                submit_button();
                ?>

            </form>
        </div>
    <?php }

    public function gallery_scrapper_settings_page_init()
    {
        register_setting(
            'gallery_scrapper_settings_option_group', // option_group
            'gallery_scrapper_settings_option_name', // option_name
            array($this, 'gallery_scrapper_settings_sanitize') // sanitize_callback
        );

        add_settings_section(
            'gallery_scrapper_settings_setting_section', // id
            'Settings', // title
            array($this, 'gallery_scrapper_settings_section_info'), // callback
            'gallery-scrapper-settings-admin' // page
        );

        add_settings_field(
            'enable_gallery_scrapper_0', // id
            'Enable gallery scrapper', // title
            array($this, 'enable_gallery_scrapper_0_callback'), // callback
            'gallery-scrapper-settings-admin', // page
            'gallery_scrapper_settings_setting_section' // section
        );

        add_settings_field(
            'cron_interval_1', // id
            'Cron interval', // title
            array($this, 'cron_interval_1_callback'), // callback
            'gallery-scrapper-settings-admin', // page
            'gallery_scrapper_settings_setting_section' // section
        );

        add_settings_field(
            'sources_2', // id
            'Sources', // title
            array($this, 'sources_2_callback'), // callback
            'gallery-scrapper-settings-admin', // page
            'gallery_scrapper_settings_setting_section' // section
        );
    }

    public function gallery_scrapper_settings_sanitize($input)
    {
        $sanitary_values = array();
        if (isset($input['enable_gallery_scrapper_0'])) {
            $sanitary_values['enable_gallery_scrapper_0'] = $input['enable_gallery_scrapper_0'];
        }

        if (isset($input['cron_interval_1'])) {
            $sanitary_values['cron_interval_1'] = $input['cron_interval_1'];
        }

        if (isset($input['sources_2'])) {
            $sanitary_values['sources_2'] = sanitize_text_field($input['sources_2']);
        }

        return $sanitary_values;
    }

    public function gallery_scrapper_settings_section_info()
    {

    }

    public function enable_gallery_scrapper_0_callback()
    {
        printf(
            '<input type="checkbox" name="gallery_scrapper_settings_option_name[enable_gallery_scrapper_0]" id="enable_gallery_scrapper_0" value="enable_gallery_scrapper_0" %s>',
            (isset($this->gallery_scrapper_settings_options['enable_gallery_scrapper_0']) && $this->gallery_scrapper_settings_options['enable_gallery_scrapper_0'] === 'enable_gallery_scrapper_0') ? 'checked' : ''
        );
    }

    public function cron_interval_1_callback()
    {
        ?> <select name="gallery_scrapper_settings_option_name[cron_interval_1]" id="cron_interval_1">
        <?php $selected = (isset($this->gallery_scrapper_settings_options['cron_interval_1']) && $this->gallery_scrapper_settings_options['cron_interval_1'] === 'hourly') ? 'selected' : ''; ?>
        <option value="hourly" <?php echo $selected; ?>>Hourly</option>
        <?php $selected = (isset($this->gallery_scrapper_settings_options['cron_interval_1']) && $this->gallery_scrapper_settings_options['cron_interval_1'] === 'every_two_hours') ? 'selected' : ''; ?>
        <option value="every_two_hours" <?php echo $selected; ?>>Every two hours</option>
        <?php $selected = (isset($this->gallery_scrapper_settings_options['cron_interval_1']) && $this->gallery_scrapper_settings_options['cron_interval_1'] === 'every_tree_hours') ? 'selected' : ''; ?>
        <option value="every_tree_hours" <?php echo $selected; ?>>Every tree hours</option>
        <?php $selected = (isset($this->gallery_scrapper_settings_options['cron_interval_1']) && $this->gallery_scrapper_settings_options['cron_interval_1'] === 'every_four_hours') ? 'selected' : ''; ?>
        <option value="every_four_hours" <?php echo $selected; ?>>Every four hours</option>
        <?php $selected = (isset($this->gallery_scrapper_settings_options['cron_interval_1']) && $this->gallery_scrapper_settings_options['cron_interval_1'] === 'every_eight_hours') ? 'selected' : ''; ?>
        <option value="every_eight_hours" <?php echo $selected; ?>>Every eight hours</option>
        <?php $selected = (isset($this->gallery_scrapper_settings_options['cron_interval_1']) && $this->gallery_scrapper_settings_options['cron_interval_1'] === 'every_ten_hours') ? 'selected' : ''; ?>
        <option value="every_ten_hours" <?php echo $selected; ?>>Every ten hours</option>
    </select> <?php
    }

    public function sources_2_callback()
    {
        ?>

        <div id="app"
             data-scrapesdata='<?php echo json_encode($this->getScrapeKeyValuePairs() ?? []) ?>'
             data-sourcesdata='<?php echo isset($this->gallery_scrapper_settings_options['sources_2']) ? esc_attr($this->gallery_scrapper_settings_options['sources_2']) : '[]' ?>'>

            <template v-for="(source, index) in sources">
                <fieldset>
                    <div class="scrape-name">
                        <label>Scrape name</label>
                        <select class="regular-text" v-model="sources[index].scrape">
                            <option v-for="(scrape, index) in scrapes" :value="index">{{ scrape }}</option>
                        </select>
                    </div>
                    
                    <div class="path">
                        <label>Path</label>
                        <input class="regular-text" type="text" v-model="sources[index].path">
                    </div>
                    <div>
                        <label>Attribute</label>
                        <input class="regular-text" type="text" v-model="sources[index].attribute">
                    </div>

                    <div>
                        <label>Alt Attribute</label>
                        <input class="regular-text" type="text" v-model="sources[index].alt">
                    </div>
                    <span class="dashicons dashicons-trash" @click="remove(index)"></span>
                </fieldset>
            </template>

            <button type="button" @click="add()" class="button button-primary">Add source</button>

            <input type="hidden" :value="sourcesJson" name="gallery_scrapper_settings_option_name[sources_2]">

            <button type="button" @click="syncNow()" class="button button-primary">Sync now</button>
            
        </div>

        <?php
    }

    public function getScrapes()
    {
        require_once ABSPATH . 'wp-includes/pluggable.php';

        $args = [
            'post_type' => ['scrape'],
        ];

        $query = new WP_Query($args);
        return $query->get_posts();
    }
    
    
    public function getScrapeKeyValuePairs() {
        $scrapes = $this->getScrapes();
        $data = [];
        foreach ($scrapes as $scrape) {
            $data[$scrape->ID] = $scrape->post_title;
        }        
        return $data;
    }

}

if (is_admin())
    $gallery_scrapper_settings = new GalleryScrapperSettings();

/* 
 * Retrieve this value with:
 * $gallery_scrapper_settings_options = get_option( 'gallery_scrapper_settings_option_name' ); // Array of All Options
 * $enable_gallery_scrapper_0 = $gallery_scrapper_settings_options['enable_gallery_scrapper_0']; // Enable gallery scrapper
 * $cron_interval_1 = $gallery_scrapper_settings_options['cron_interval_1']; // Cron interval
 * $sources_2 = $gallery_scrapper_settings_options['sources_2']; // Sources
 */
